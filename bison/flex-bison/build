#!/bin/bash -

curr=$(cd `dirname $(which $0)`; pwd)

cd $curr

yy_name="$1"
yy_name=$(echo $yy_name | sed 's/\.y//g')
yy_name=$(echo $yy_name | sed 's/\.//g')

if [ -z "${yy_name}" ]; then 
cat <<END
Help
    Invalid input yy file name can not be empty

    USAGE: ./build <yy_file_name>

END
    exit 1
fi

if ! [ -f "${yy_name}.y" ]; then 
    echo "Can not find grammar file ${yy_name}.y in current dir"
    exit 1
fi

yy_header=""
if [ -f "${yy_name}.h" ]; then
    yy_header="${yy_name}.h"
fi

yy_tab_header=""
if [ -f "${yy_name}.tab.h" ]; then
    yy_tab_header="${yy_name}.tab.h"
fi

rm Makefile

cat <<END > Makefile
CC=clang 
CFLAGS=-c -pipe -O0 -W -Wall -Wpointer-arith -Wno-unused-parameter -Werror -g
LDFLAGS=-L/usr/local/opt/bison/lib

LINK = \$(CC)
BISON = /usr/local/opt/bison/bin/bison

BUILD_DEPS = ../includes/misc_config.h misc_parser.h ${yy_header} ${yy_tab_header}
BUILD_INCS = -I ./ -I ../includes

END

cat <<END >> Makefile
misc_parser: ${yy_name}.tab.o \\
END
if [ -f "${yy_name}.c" ]; then
cat <<END >> Makefile
    ${yy_name}.o \\
END
fi
if [ -f "${yy_name}_lex.c" ]; then
cat <<END >> Makefile
    ${yy_name}_lex.o \\
END
fi
cat <<END >> Makefile
	lex.yy.o \\
	misc_parser.o
	\$(LINK) -o misc_parser.bin ${yy_name}.tab.o \\
END

if [ -f "${yy_name}.c" ]; then
cat <<END >> Makefile
	${yy_name}.o \\
END
fi
if [ -f "${yy_name}_lex.c" ]; then
cat <<END >> Makefile
	${yy_name}_lex.o \\
END
fi
cat <<END >> Makefile
	lex.yy.o \\
	misc_parser.o \\
	-ldl -lpthread -lm -Wl \$(LDFLAGS)

${yy_name}.tab.c:
	\$(BISON) -v -Wmidrule-value -Wno-other --debug --report=states,lookaheads --report-file=states.report --graph=automaton.dot -d ${yy_name}.y

lex.yy.c:
	flex ${yy_name}.l

${yy_name}.tab.o: \$(BUILD_DEPS)  \\
    ${yy_name}.tab.c
	\$(CC) \$(CFLAGS) \$(BUILD_INCS) -o ${yy_name}.tab.o ${yy_name}.tab.c

lex.yy.o: \$(BUILD_DEPS)  \\
    lex.yy.c
	\$(CC) \$(CFLAGS) \$(BUILD_INCS) -o lex.yy.o lex.yy.c
END
if [ -f "${yy_name}.c" ]; then
cat <<END >> Makefile

${yy_name}.o:	\$(BUILD_DEPS)
	\$(CC) \$(CFLAGS) \$(BUILD_INCS) -o ${yy_name}.o ${yy_name}.c
END
fi
if [ -f "${yy_name}_lex.c" ]; then
cat <<END >> Makefile

${yy_name}_lex.o:	\$(BUILD_DEPS)
	\$(CC) \$(CFLAGS) \$(BUILD_INCS) -o ${yy_name}_lex.o ${yy_name}_lex.c
END
fi
cat <<END >> Makefile

misc_parser.o:	\$(BUILD_DEPS)
	\$(CC) \$(CFLAGS) \$(BUILD_INCS) -o misc_parser.o misc_parser.c
END


cat <<END >> Makefile

.PHONY:clean
clean:
	rm -rf *.o *.bin core *.tab.* misc_yy_gen.h states.report automaton.dot automaton.svg *.output lex.yy.c

clean-build:
	rm -rf *.o *.bin
END

make clean
make

if [ -f "automaton.dot" ]; then
    if [ -f "automaton.svg" ]; then
        rm automaton.svg
    fi
    #dot -T svg automaton.dot > automaton.svg
fi
